name: Generate & Publish VRChat API Python SDK

permissions:
  contents: write

on:
  repository_dispatch:
    types: [spec_release]
  workflow_dispatch:

jobs:
  generate-and-publish:
    runs-on: ubuntu-latest
    name: Generate & Publish

    steps:
      # 1) Checkout your repo using your PAT (TOKEN_GITHUB)
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.TOKEN_GITHUB }}

      # 2) Set up Node.js & cache OpenAPI Generator
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-v16-${{ hashFiles('**/generate.sh') }}
          restore-keys: |
            ${{ runner.os }}-node-v16

      - name: Install OpenAPI Generator CLI
        run: npm install @openapitools/openapi-generator-cli

      - name: Pin OpenAPI Generator version
        run: npx @openapitools/openapi-generator-cli version-manager set 6.2.1

      # 3) Generate the Python client
      - name: Generate SDK Client
        run: bash ./generate.sh

      # 4) Set up Python & build tools
      - name: Setup Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install build & twine
        run: python -m pip install --upgrade pip build twine

      # 5) Extract version from setup.py
      - name: Extract SDK version
        id: get_version
        run: |
          VERSION=$(grep '^VERSION =' setup.py | cut -d'"' -f2)
          echo "SDK_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Show SDK version
        run: echo "Releasing SDK version ${{ env.SDK_VERSION }}"

      # 6) Commit generated SDK back to main
      - name: Commit generated client to main
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git diff --quiet || git commit -m "Upgrade Python SDK to spec ${{ env.SDK_VERSION }}"
          git push origin main

      # 7) Build distributions
      - name: Build distributions
        run: python -m build --sdist --wheel --outdir dist/

      # 8) Publish to PyPI
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
